PEOS GUI Iteration 4 README
Authors: Cp Agarwal       cagarwal@scu.edu   219290
	 Jonathan Montana jmontana@scu.edu   221223
	 Leo Pinard       lpinard@scu.edu    196986
	 Tri Pham         tpham1@scu.edu     208920


(1) How to Build the Program

To build the program, untar the tarball into your current directory
and then change to the peos directory.  From the command line, run
the Makefile using the command "make".


(2) How to Install Dependencies of Peos


  a) In order to run the PEOS program you first need to locate the dependencies of Peos and download the tarballs into your home directory.  Inside your home directory un-tar all of the packages by typing the following command for each package: tar -zxvf [package-name].

Peos build depends on the following packages:

Package                                 Location
-----------------------------------------------------------------------------------------------------
pkgconfig-0.14.0                ftp://ftp.gnome.org/pub/gnome/sources/pkgconfig/0.14/pkgconfig-0.14.0.tar.gz
glib-1.2.10                     ftp://ftp.gtk.org/pub/gtk/v1.2/glib-1.2.10.tar.gz
gtk-1.2.10                      ftp://ftp.gtk.org/pub/gtk/v1.2/gtk+-1.2.10.tar.gz
db-3.1.17                       ftp://sleepycat1.inetu.net/releases/db-3.1.17.tar.gz
imlib-1.9                       ftp://ftp.gnome.org/pub/gnome/sources/imlib/1.9/imlib-1.9.0.tar.gz
ORBit-0.5.17                    ftp://ftp.gnome.org/pub/gnome/sources/ORBit/0.5/ORBit-0.5.17.tar.gz
audiofile-0.1.8                 ftp://ftp.gnome.org/pub/gnome/sources/audiofile/0.1/audiofile-0.1.8.tar.gz
esound-0.2.8                    ftp://ftp.gnome.org/pub/gnome/sources/esound/0.2/esound-0.2.8.tar.gz
gnome-libs-1.4.2                http://ftp.acc.umu.se/pub/gnome/sources/gnome-libs/1.4/gnome-libs-1.4.2.tar.gz
libxml-1.8.8                    ftp://ftp.gnome.org/pub/gnome/sources/libxml/1.8/libxml-1.8.8.tar.gz
gdk-pixbuf-0.8.0                ftp://ftp.gnome.org/pub/gnome/sources/gdk-pixbuf/0.8/gdk-pixbuf-0.8.0.tar.gz
gnome-print-0.29                ftp://ftp.gnome.org/pub/gnome/sources/gnome-print/0.29/gnome-print-0.29.tar.gz
libglade-0.17                   ftp://ftp.gnome.org/pub/gnome/sources/libglade/0.17/libglade-0.17.tar.gz
gal-0.24                        ftp://ftp.gnome.org/pub/gnome/sources/gal/0.24/gal-0.24.tar.gz
libcapplet-1.5.11               ftp://ftp.gnome.org/pub/gnome/sources/libcapplet/1.5/libcapplet-1.5.11.tar.gz
oaf-0.2.0                       ftp://ftp.gnome.org/pub/gnome/sources/oaf/0.2/oaf-0.2.0.tar.gz
GConf-1.0.9                     ftp://ftp.gnome.org/pub/gnome/sources/GConf/1.0/GConf-1.0.9.tar.gz
gtkhtml-1.1.10                  ftp://ftp.gnome.org/pub/gnome/sources/gtkhtml/1.1/gtkhtml-1.1.10.tar.gz
libxml2-2.4.28                  ftp://ftp.gnome.org/pub/gnome/sources/libxml2/2.4/libxml2-2.4.28.tar.gz


  b) If you are doing a manual install then it is best to follow these steps exactly.  If the preprocessor on the system 
that you are using has a problem locating the include paths, then type:
  env CPPFLAGS=-I/home/[user]/include LDFLAGS=-I/home/[user]/lib <specified-env_variables> ./configure --prefix=/home/[user] <specified-commands>
The arguments in the angle brackets are only used when specified in one of the steps below.  During the configuration of any
of the packages, if there is an error that reports: Checking for C compiler default output... configure: error: C compiler
cannot create executables, then type: export CFLAGS= CXXFLAGS=
It is recommended to export these two variables if there is any C compiler or preprocessor error during the configuration phase.
These variables may not have been set to null because a build did not complete successfully.  This will affect the preprocessor's search
when configuring a package.  

  Note:  You cannot build a package without first correctly configuring the package, and that means including the correct paths to 
the headers and libraries.  If you need to re-configure because of a build error, then it is recommended that you 
first type: make uninstall && make clean 
Also, if the package that you are trying to re-configure has a config.cache file, then you must remove it before you configure.
       
Step1:  Install pkgconfig-0.14.0

	export PATH=$PATH:/home/[user]/bin
	export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/home/[user]/lib
	export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/home/[user]/lib/pkgconfig
	cd ~/pkgconfig-0.14.0
	./configure --prefix=/home/[user] (/home/[user] is your home directory)
	make && make install

Step2:  Install glib-1.2.10

	cd ~/glib-1.2.10
	./configure --prefix=/home/[user] && make && make install
	
Step3:  Install gtk-1.2.10

	cd ~/gtk-1.2.10
	./configure --prefix=/home/[user] && make && make install

Step4:  Install db-3.1.17

	cd ~/db-3.1.17/build_unix
	../dist/configure --prefix=/home/[user] --enable-compat185
	cd /home/[user]/lib
	ln -s libdb.a libdb-3.a
	
Step5:  Install imlib-1.9.0

	cd ~/imlib-1.9.0
	./configure --prefix=/home/[user] && make && make install

Step6:  Install ORBit-0.5.17

	cd ~/ORBit-0.5.17
	./configure --prefix=/home/[user] && make && make install

Step7:  Install audiofile-0.1.8
	cd ~/audiofile-0.1.8
	./configure --prefix=/home/[user] && make && make install

Step8:  Install esound-0.2.8

	cd ~/esound-0.2.8
	./configure --prefix=/home/[user] 
	vi esddsp.c (on line 59 change #define REAL_LIBC RTLD_NEXT to #define REAL_LIBC 0)
	make && make install

Step9:  Install gnome-libs-1.4.2

	cd ~/gnome-libs-1.4.2
	env LIBS=-lpthread ./configure --prefix=/home/[user] && make && make install

Step10: Install libxml-1.8.8

	cd ~/libxml-1.8.8
	./configure --prefix=/home/[user] && make && make install

Step11: Install gdk-pixbuf-0.8.0

	cd ~/gdk-pixbuf-0.8.0
	env CPPFLAGS=-I/home/[user]/include ./configure --prefix=/home/[user] && make && make install

Step12: Install gnome-print-0.29

	cd ~/gnome-print-0.29
	./configure --prefix=/home/[user] && make && make install

Step13: Install libglade-0.17

	cd ~/libglade-0.17
	env CPPFLAGS=-I/home/[user]/include ./configure --prefix=/home/[user] && make && make install

Step14: Install gal-0.24

	cd ~/gal-0.24
	env CPPFLAGS=-I/home/[user]/include ./configure --prefix=/home/[user] && make && make install

Step15: Install libcapplet-1.5.11

	cd ~/libcapplet-1.5.11
	./configure --prefix=/home/[user] && make && make install

Step16: Install oaf-0.2.0

	cd ~/oaf-0.2.0
	./configure --prefix=/home/[user] 
	vi ./oafd/ac-query-parse.y (on line 2 replace #define YYSTACK_USE_ALLOCA with #define YYSTACK_USE_ALLOCA (1)
	make && make install

Step17: Install GConf-1.0.9

	cd ~/GConf-1.0.9
	cd /home/[user]/include/gnome-xml
	ln -s . libxml
	./configure --prefix=/home/[user] && make && make install

Step18: Install gtkhtml-1.1.10

	cd ~/gtkhtml-1.1.10
	./configure --prefix=/home/[user] && make && make install

Step19: Install libxml2-2.4.28

	cd ~/libxml2-2.4.28
	./configure --prefix=/home/[user] && make && make install
	  	
	
  c) Developer: After the compilation and link phase are complete (i.e., PEOS is loaded) 
     Type the following make commands:

#Compiles and loads PEOS.
all

#Executes the binary file.
runpeos

#Search and output to standard out the directory names that contain the library dependencies for PEOS.
runpeos_lib_dirs

#Static library dependencies for PEOS.
runpeos_lib_names_a

#Dynamic library dependencies for PEOS.
runpeos_lib_names_so

#Path locations for static libraries.
runpeos_lib_locations_a

#Path locations for dynamic libraries.
runpeos_lib_locations_so

#Search and output to standard out the directory names that contain the header dependencies for PEOS.
runpeos_header_dirs

#Collect the headers
collect_headers

#Collect the libraries
collect_libs

#Creates the tar file for the user. With a new user makefile to run PEOS.
dist

Note: After the files have been downloaded from the cvs box the developer will install the tar files into his/her home directory the macros will be created to locate the header and library dependencies. The developer will then use the makefile that uses the macros from the install and will search for the files and then copy them into a tree to package for the user. The user will then be able to untar the tar ball and run PEOS. Side note: The library and header files are not saved into the CVS box.

  d) After all the packages have been installed, then type: make dist to package a tar ball for the user. The user will have      a modified makefile and will include only user previlage commands. But this is sufficient after the developer has packag     ed it for the user.

  e) The user will only be able to use the basic command such as make, make clobber, etc. (Look at the user Makefile)


(3) How to Run the Program

After building the program as outlined in section (1) above,
you can run the program by typing the command "./runpeos" at the
command prompt from the directory containing the program files.

NOTE: This program is not case sensitive.


(4) Creating a Process

Click on File->Create (or press Control + C) in order to create a process.  A dialog box will pop up, allowing you to browse through your directories.  Find the desired .pml file, select it, and click on "OK."


(5) Viewing a Process

There are 2 ways to view active processes:
1. Once a process has been created, you can view it by goingto the "View" menu in the menu bar.  It will list all of the active processes. Click on the process you want to view.
2. Click on the tab with the desired process.


(6) Deleting a Process

Click on File->Delete, then select the process you want to delete.  Click "OK" on the dialog box that pops up.


(7) Actions

(7a) Completing an Action

Click on the "Start" button at the bottom of the window.  If there is a required resource, enter it into the dialog box that pops up.  Click on the "Finish" button to finish the action.  Click the right arrow at the bottom of the screen to move on to the next action.

(7b) Extra Capabilities for an Action

At any time before you finish the action, you can suspend, abort, or rebind.  Clicking on "Suspend" lets you save the state of the action, which lets you move on to the next action without losing the state or any resources you have already entered.  Clicking on "Abort" stops the action, and resets the state back to "NONE," but it keeps any entered resources.  "Rebind" lets you re-enter a required resource if there already is one, and the action allows it.

If you want to revisit an action, you can click on the back arrow.


(8) Finishing a Process

When you click "Finish" on the last action, you are done with the process.

(9) Checking the resources

There are links on the right window pane when the resouce is given a value. If the value is found the Konqueror will run that specific resource with the associated program. If the resources is not executable the Konqueror will pop-up a window with an error. DO NOT CLICK ON THAT WINDOW, PRESS ENTER TO ESCAPE FROM THAT WINDOW. Given the behaviour of Konqueror, if you have clicked on the window by mistake, you will have to press ENTER the same number of times as you have clicked the mouse on the window.


Last Modified: 06/06/2004

